<?php
// @link https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata
namespace PHPSTORM_META {

	override(
		\Burzum\CakeServiceLayer\Service\ServiceAwareTrait::loadService(0),
		map([
			'Sandbox.Calculator/Post' => \Sandbox\Service\Calculator\PostService::class,
		])
	);

	expectedArguments(
		\Cake\Cache\Cache::add(),
		2,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::clear(),
		0,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::clearGroup(),
		1,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::decrement(),
		2,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::delete(),
		1,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::deleteMany(),
		1,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::increment(),
		2,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::read(),
		1,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::readMany(),
		1,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::remember(),
		2,
		argumentsSet('cacheEngines')
	);

	expectedArguments(
		\Cake\Cache\Cache::write(),
		2,
		argumentsSet('cacheEngines')
	);

	override(
		\Cake\Controller\Controller::loadComponent(0),
		map([
			'Ajax.Ajax' => \Ajax\Controller\Component\AjaxComponent::class,
			'Auth' => \Cake\Controller\Component\AuthComponent::class,
			'Cache.Cache' => \Cache\Controller\Component\CacheComponent::class,
			'Cache.PartialCache' => \Cache\Controller\Component\PartialCacheComponent::class,
			'Calendar.Calendar' => \Calendar\Controller\Component\CalendarComponent::class,
			'Captcha.Captcha' => \Captcha\Controller\Component\CaptchaComponent::class,
			'Captcha.Preparer' => \Captcha\Controller\Component\PreparerComponent::class,
			'Data.CountryStateHelper' => \Data\Controller\Component\CountryStateHelperComponent::class,
			'Expose.Superimpose' => \Expose\Controller\Component\SuperimposeComponent::class,
			'Flash' => \Cake\Controller\Component\FlashComponent::class,
			'FormProtection' => \Cake\Controller\Component\FormProtectionComponent::class,
			'Paginator' => \App\Controller\Component\PaginatorComponent::class,
			'Ratings.Rating' => \Ratings\Controller\Component\RatingComponent::class,
			'RequestHandler' => \Cake\Controller\Component\RequestHandlerComponent::class,
			'Search.Search' => \Search\Controller\Component\SearchComponent::class,
			'Security' => \Cake\Controller\Component\SecurityComponent::class,
			'Setup.Setup' => \Setup\Controller\Component\SetupComponent::class,
			'TestHelper.Plugins' => \TestHelper\Controller\Component\PluginsComponent::class,
			'TestHelper.TestFixtures' => \TestHelper\Controller\Component\TestFixturesComponent::class,
			'TestHelper.TestGenerator' => \TestHelper\Controller\Component\TestGeneratorComponent::class,
			'TestHelper.TestRunner' => \TestHelper\Controller\Component\TestRunnerComponent::class,
			'TinyAuth.Auth' => \TinyAuth\Controller\Component\AuthComponent::class,
			'TinyAuth.AuthUser' => \TinyAuth\Controller\Component\AuthUserComponent::class,
			'Tools.Common' => \Tools\Controller\Component\CommonComponent::class,
			'Tools.Mobile' => \Tools\Controller\Component\MobileComponent::class,
			'Tools.RefererRedirect' => \Tools\Controller\Component\RefererRedirectComponent::class,
			'Tools.Url' => \Tools\Controller\Component\UrlComponent::class,
		])
	);

	override(
		\Cake\Core\PluginApplicationInterface::addPlugin(0),
		map([
			'Ajax' => \Cake\Http\BaseApplication::class,
			'AssetCompress' => \Cake\Http\BaseApplication::class,
			'AuthSandbox' => \Cake\Http\BaseApplication::class,
			'Bake' => \Cake\Http\BaseApplication::class,
			'BootstrapUI' => \Cake\Http\BaseApplication::class,
			'Burzum/CakeServiceLayer' => \Cake\Http\BaseApplication::class,
			'Cache' => \Cake\Http\BaseApplication::class,
			'Cake/TwigView' => \Cake\Http\BaseApplication::class,
			'CakeDto' => \Cake\Http\BaseApplication::class,
			'Calendar' => \Cake\Http\BaseApplication::class,
			'Captcha' => \Cake\Http\BaseApplication::class,
			'CsvView' => \Cake\Http\BaseApplication::class,
			'Data' => \Cake\Http\BaseApplication::class,
			'DatabaseLog' => \Cake\Http\BaseApplication::class,
			'DebugKit' => \Cake\Http\BaseApplication::class,
			'Expose' => \Cake\Http\BaseApplication::class,
			'Feed' => \Cake\Http\BaseApplication::class,
			'Feedback' => \Cake\Http\BaseApplication::class,
			'Flash' => \Cake\Http\BaseApplication::class,
			'Geo' => \Cake\Http\BaseApplication::class,
			'Icings/Menu' => \Cake\Http\BaseApplication::class,
			'IdeHelper' => \Cake\Http\BaseApplication::class,
			'Markup' => \Cake\Http\BaseApplication::class,
			'Meta' => \Cake\Http\BaseApplication::class,
			'Migrations' => \Cake\Http\BaseApplication::class,
			'ModelGraph' => \Cake\Http\BaseApplication::class,
			'Queue' => \Cake\Http\BaseApplication::class,
			'Ratings' => \Cake\Http\BaseApplication::class,
			'Sandbox' => \Cake\Http\BaseApplication::class,
			'Search' => \Cake\Http\BaseApplication::class,
			'Setup' => \Cake\Http\BaseApplication::class,
			'Shim' => \Cake\Http\BaseApplication::class,
			'StateMachine' => \Cake\Http\BaseApplication::class,
			'StateMachineSandbox' => \Cake\Http\BaseApplication::class,
			'Tags' => \Cake\Http\BaseApplication::class,
			'TestHelper' => \Cake\Http\BaseApplication::class,
			'TinyAuth' => \Cake\Http\BaseApplication::class,
			'Tools' => \Cake\Http\BaseApplication::class,
		])
	);

	override(
		\Cake\Database\TypeFactory::build(0),
		map([
			'biginteger' => \Cake\Database\Type\IntegerType::class,
			'binary' => \Cake\Database\Type\BinaryType::class,
			'binaryuuid' => \Cake\Database\Type\BinaryUuidType::class,
			'boolean' => \Cake\Database\Type\BoolType::class,
			'char' => \Cake\Database\Type\StringType::class,
			'date' => \Cake\Database\Type\DateType::class,
			'datetime' => \Cake\Database\Type\DateTimeType::class,
			'datetimefractional' => \Cake\Database\Type\DateTimeFractionalType::class,
			'decimal' => \Cake\Database\Type\DecimalType::class,
			'float' => \Cake\Database\Type\FloatType::class,
			'image' => \Captcha\Database\Type\ImageType::class,
			'integer' => \Cake\Database\Type\IntegerType::class,
			'json' => \Cake\Database\Type\JsonType::class,
			'object' => \Geo\Database\Type\ObjectType::class,
			'smallinteger' => \Cake\Database\Type\IntegerType::class,
			'string' => \Cake\Database\Type\StringType::class,
			'text' => \Cake\Database\Type\StringType::class,
			'time' => \Cake\Database\Type\TimeType::class,
			'timestamp' => \Cake\Database\Type\DateTimeType::class,
			'timestampfractional' => \Cake\Database\Type\DateTimeFractionalType::class,
			'timestamptimezone' => \Cake\Database\Type\DateTimeTimezoneType::class,
			'tinyinteger' => \Cake\Database\Type\IntegerType::class,
			'uuid' => \Cake\Database\Type\UuidType::class,
		])
	);

	expectedArguments(
		\Cake\Database\TypeFactory::map(),
		0,
		'biginteger',
		'binary',
		'binaryuuid',
		'boolean',
		'char',
		'date',
		'datetime',
		'datetimefractional',
		'decimal',
		'float',
		'image',
		'integer',
		'json',
		'object',
		'smallinteger',
		'string',
		'text',
		'time',
		'timestamp',
		'timestampfractional',
		'timestamptimezone',
		'tinyinteger',
		'uuid'
	);

	expectedArguments(
		\Cake\Datasource\ConnectionManager::get(),
		0,
		'database_log',
		'default',
		'test'
	);

	override(
		\Cake\Datasource\ModelAwareTrait::loadModel(0),
		map([
			'Captcha.Captchas' => \Captcha\Model\Table\CaptchasTable::class,
			'Data.Addresses' => \Data\Model\Table\AddressesTable::class,
			'Data.Cities' => \Data\Model\Table\CitiesTable::class,
			'Data.Continents' => \Data\Model\Table\ContinentsTable::class,
			'Data.Counties' => \Data\Model\Table\CountiesTable::class,
			'Data.Countries' => \Data\Model\Table\CountriesTable::class,
			'Data.Currencies' => \Data\Model\Table\CurrenciesTable::class,
			'Data.Districts' => \Data\Model\Table\DistrictsTable::class,
			'Data.Languages' => \Data\Model\Table\LanguagesTable::class,
			'Data.Locations' => \Data\Model\Table\LocationsTable::class,
			'Data.MimeTypeImages' => \Data\Model\Table\MimeTypeImagesTable::class,
			'Data.MimeTypes' => \Data\Model\Table\MimeTypesTable::class,
			'Data.PostalCodes' => \Data\Model\Table\PostalCodesTable::class,
			'Data.States' => \Data\Model\Table\StatesTable::class,
			'DatabaseLog.DatabaseLogApp' => \DatabaseLog\Model\Table\DatabaseLogAppTable::class,
			'DatabaseLog.DatabaseLogs' => \DatabaseLog\Model\Table\DatabaseLogsTable::class,
			'DebugKit.Panels' => \DebugKit\Model\Table\PanelsTable::class,
			'DebugKit.Requests' => \DebugKit\Model\Table\RequestsTable::class,
			'Feedback.Feedbackstore' => \Feedback\Model\Table\FeedbackstoreTable::class,
			'Geo.GeocodedAddresses' => \Geo\Model\Table\GeocodedAddressesTable::class,
			'Queue.QueueProcesses' => \Queue\Model\Table\QueueProcessesTable::class,
			'Queue.QueuedJobs' => \Queue\Model\Table\QueuedJobsTable::class,
			'Ratings.Ratings' => \Ratings\Model\Table\RatingsTable::class,
			'Roles' => \App\Model\Table\RolesTable::class,
			'Sandbox.Animals' => \Sandbox\Model\Table\AnimalsTable::class,
			'Sandbox.BitmaskRecords' => \Sandbox\Model\Table\BitmaskRecordsTable::class,
			'Sandbox.CountryRecords' => \Sandbox\Model\Table\CountryRecordsTable::class,
			'Sandbox.Events' => \Sandbox\Model\Table\EventsTable::class,
			'Sandbox.ExampleRecords' => \Sandbox\Model\Table\ExampleRecordsTable::class,
			'Sandbox.ExposedUsers' => \Sandbox\Model\Table\ExposedUsersTable::class,
			'Sandbox.SandboxCategories' => \Sandbox\Model\Table\SandboxCategoriesTable::class,
			'Sandbox.SandboxPosts' => \Sandbox\Model\Table\SandboxPostsTable::class,
			'Sandbox.SandboxRatings' => \Sandbox\Model\Table\SandboxRatingsTable::class,
			'Sandbox.SandboxUsers' => \Sandbox\Model\Table\SandboxUsersTable::class,
			'Tags.Tagged' => \Tags\Model\Table\TaggedTable::class,
			'Tags.Tags' => \Tags\Model\Table\TagsTable::class,
			'Tools.Tokens' => \Tools\Model\Table\TokensTable::class,
			'Users' => \App\Model\Table\UsersTable::class,
		])
	);

	override(
		\Cake\Datasource\QueryInterface::find(0),
		map([
			'all' => \Cake\ORM\Query::class,
			'list' => \Cake\ORM\Query::class,
			'threaded' => \Cake\ORM\Query::class,
		])
	);

	expectedArguments(
		\Cake\Http\ServerRequest::getParam(),
		0,
		'_ext',
		'_matchedRoute',
		'action',
		'controller',
		'pass',
		'plugin',
		'prefix'
	);

	override(
		\Cake\Mailer\MailerAwareTrait::getMailer(0),
		map([

		])
	);

	override(
		\Cake\ORM\Association::find(0),
		map([
			'all' => \Cake\ORM\Query::class,
			'list' => \Cake\ORM\Query::class,
			'threaded' => \Cake\ORM\Query::class,
		])
	);

	override(
		\Cake\ORM\Locator\LocatorInterface::get(0),
		map([
			'Captcha.Captchas' => \Captcha\Model\Table\CaptchasTable::class,
			'Data.Addresses' => \Data\Model\Table\AddressesTable::class,
			'Data.Cities' => \Data\Model\Table\CitiesTable::class,
			'Data.Continents' => \Data\Model\Table\ContinentsTable::class,
			'Data.Counties' => \Data\Model\Table\CountiesTable::class,
			'Data.Countries' => \Data\Model\Table\CountriesTable::class,
			'Data.Currencies' => \Data\Model\Table\CurrenciesTable::class,
			'Data.Districts' => \Data\Model\Table\DistrictsTable::class,
			'Data.Languages' => \Data\Model\Table\LanguagesTable::class,
			'Data.Locations' => \Data\Model\Table\LocationsTable::class,
			'Data.MimeTypeImages' => \Data\Model\Table\MimeTypeImagesTable::class,
			'Data.MimeTypes' => \Data\Model\Table\MimeTypesTable::class,
			'Data.PostalCodes' => \Data\Model\Table\PostalCodesTable::class,
			'Data.States' => \Data\Model\Table\StatesTable::class,
			'DatabaseLog.DatabaseLogApp' => \DatabaseLog\Model\Table\DatabaseLogAppTable::class,
			'DatabaseLog.DatabaseLogs' => \DatabaseLog\Model\Table\DatabaseLogsTable::class,
			'DebugKit.Panels' => \DebugKit\Model\Table\PanelsTable::class,
			'DebugKit.Requests' => \DebugKit\Model\Table\RequestsTable::class,
			'Feedback.Feedbackstore' => \Feedback\Model\Table\FeedbackstoreTable::class,
			'Geo.GeocodedAddresses' => \Geo\Model\Table\GeocodedAddressesTable::class,
			'Queue.QueueProcesses' => \Queue\Model\Table\QueueProcessesTable::class,
			'Queue.QueuedJobs' => \Queue\Model\Table\QueuedJobsTable::class,
			'Ratings.Ratings' => \Ratings\Model\Table\RatingsTable::class,
			'Roles' => \App\Model\Table\RolesTable::class,
			'Sandbox.Animals' => \Sandbox\Model\Table\AnimalsTable::class,
			'Sandbox.BitmaskRecords' => \Sandbox\Model\Table\BitmaskRecordsTable::class,
			'Sandbox.CountryRecords' => \Sandbox\Model\Table\CountryRecordsTable::class,
			'Sandbox.Events' => \Sandbox\Model\Table\EventsTable::class,
			'Sandbox.ExampleRecords' => \Sandbox\Model\Table\ExampleRecordsTable::class,
			'Sandbox.ExposedUsers' => \Sandbox\Model\Table\ExposedUsersTable::class,
			'Sandbox.SandboxCategories' => \Sandbox\Model\Table\SandboxCategoriesTable::class,
			'Sandbox.SandboxPosts' => \Sandbox\Model\Table\SandboxPostsTable::class,
			'Sandbox.SandboxRatings' => \Sandbox\Model\Table\SandboxRatingsTable::class,
			'Sandbox.SandboxUsers' => \Sandbox\Model\Table\SandboxUsersTable::class,
			'Tags.Tagged' => \Tags\Model\Table\TaggedTable::class,
			'Tags.Tags' => \Tags\Model\Table\TagsTable::class,
			'Tools.Tokens' => \Tools\Model\Table\TokensTable::class,
			'Users' => \App\Model\Table\UsersTable::class,
		])
	);

	expectedArguments(
		\Cake\ORM\Table::addBehavior(),
		0,
		'Calendar.Calendar',
		'Captcha.Captcha',
		'Captcha.PassiveCaptcha',
		'CounterCache',
		'DebugKit.Timed',
		'Expose.Expose',
		'Expose.Superimpose',
		'Geo.Geocoder',
		'Ratings.Ratable',
		'Search.Search',
		'Tags.Tag',
		'Timestamp',
		'Tools.AfterSave',
		'Tools.Bitmasked',
		'Tools.Confirmable',
		'Tools.Jsonable',
		'Tools.Neighbor',
		'Tools.Passwordable',
		'Tools.Reset',
		'Tools.Slugged',
		'Tools.String',
		'Tools.Toggle',
		'Tools.TypeMap',
		'Tools.Typographic',
		'Translate',
		'Tree'
	);

	override(
		\Cake\ORM\Table::belongToMany(0),
		map([
			'Captcha.Captchas' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.Addresses' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.Cities' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.Continents' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.Counties' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.Countries' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.Currencies' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.Districts' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.Languages' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.Locations' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.MimeTypeImages' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.MimeTypes' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.PostalCodes' => \Cake\ORM\Association\BelongsToMany::class,
			'Data.States' => \Cake\ORM\Association\BelongsToMany::class,
			'DatabaseLog.DatabaseLogApp' => \Cake\ORM\Association\BelongsToMany::class,
			'DatabaseLog.DatabaseLogs' => \Cake\ORM\Association\BelongsToMany::class,
			'DebugKit.Panels' => \Cake\ORM\Association\BelongsToMany::class,
			'DebugKit.Requests' => \Cake\ORM\Association\BelongsToMany::class,
			'Feedback.Feedbackstore' => \Cake\ORM\Association\BelongsToMany::class,
			'Geo.GeocodedAddresses' => \Cake\ORM\Association\BelongsToMany::class,
			'Queue.QueueProcesses' => \Cake\ORM\Association\BelongsToMany::class,
			'Queue.QueuedJobs' => \Cake\ORM\Association\BelongsToMany::class,
			'Ratings.Ratings' => \Cake\ORM\Association\BelongsToMany::class,
			'Roles' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.Animals' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.BitmaskRecords' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.CountryRecords' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.Events' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.ExampleRecords' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.ExposedUsers' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.SandboxCategories' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.SandboxPosts' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.SandboxRatings' => \Cake\ORM\Association\BelongsToMany::class,
			'Sandbox.SandboxUsers' => \Cake\ORM\Association\BelongsToMany::class,
			'Tags.Tagged' => \Cake\ORM\Association\BelongsToMany::class,
			'Tags.Tags' => \Cake\ORM\Association\BelongsToMany::class,
			'Tools.Tokens' => \Cake\ORM\Association\BelongsToMany::class,
			'Users' => \Cake\ORM\Association\BelongsToMany::class,
		])
	);

	override(
		\Cake\ORM\Table::belongsTo(0),
		map([
			'Captcha.Captchas' => \Cake\ORM\Association\BelongsTo::class,
			'Data.Addresses' => \Cake\ORM\Association\BelongsTo::class,
			'Data.Cities' => \Cake\ORM\Association\BelongsTo::class,
			'Data.Continents' => \Cake\ORM\Association\BelongsTo::class,
			'Data.Counties' => \Cake\ORM\Association\BelongsTo::class,
			'Data.Countries' => \Cake\ORM\Association\BelongsTo::class,
			'Data.Currencies' => \Cake\ORM\Association\BelongsTo::class,
			'Data.Districts' => \Cake\ORM\Association\BelongsTo::class,
			'Data.Languages' => \Cake\ORM\Association\BelongsTo::class,
			'Data.Locations' => \Cake\ORM\Association\BelongsTo::class,
			'Data.MimeTypeImages' => \Cake\ORM\Association\BelongsTo::class,
			'Data.MimeTypes' => \Cake\ORM\Association\BelongsTo::class,
			'Data.PostalCodes' => \Cake\ORM\Association\BelongsTo::class,
			'Data.States' => \Cake\ORM\Association\BelongsTo::class,
			'DatabaseLog.DatabaseLogApp' => \Cake\ORM\Association\BelongsTo::class,
			'DatabaseLog.DatabaseLogs' => \Cake\ORM\Association\BelongsTo::class,
			'DebugKit.Panels' => \Cake\ORM\Association\BelongsTo::class,
			'DebugKit.Requests' => \Cake\ORM\Association\BelongsTo::class,
			'Feedback.Feedbackstore' => \Cake\ORM\Association\BelongsTo::class,
			'Geo.GeocodedAddresses' => \Cake\ORM\Association\BelongsTo::class,
			'Queue.QueueProcesses' => \Cake\ORM\Association\BelongsTo::class,
			'Queue.QueuedJobs' => \Cake\ORM\Association\BelongsTo::class,
			'Ratings.Ratings' => \Cake\ORM\Association\BelongsTo::class,
			'Roles' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.Animals' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.BitmaskRecords' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.CountryRecords' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.Events' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.ExampleRecords' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.ExposedUsers' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.SandboxCategories' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.SandboxPosts' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.SandboxRatings' => \Cake\ORM\Association\BelongsTo::class,
			'Sandbox.SandboxUsers' => \Cake\ORM\Association\BelongsTo::class,
			'Tags.Tagged' => \Cake\ORM\Association\BelongsTo::class,
			'Tags.Tags' => \Cake\ORM\Association\BelongsTo::class,
			'Tools.Tokens' => \Cake\ORM\Association\BelongsTo::class,
			'Users' => \Cake\ORM\Association\BelongsTo::class,
		])
	);

	override(
		\Cake\ORM\Table::find(0),
		map([
			'all' => \Cake\ORM\Query::class,
			'list' => \Cake\ORM\Query::class,
			'threaded' => \Cake\ORM\Query::class,
		])
	);

	override(
		\Cake\ORM\Table::hasMany(0),
		map([
			'Captcha.Captchas' => \Cake\ORM\Association\HasMany::class,
			'Data.Addresses' => \Cake\ORM\Association\HasMany::class,
			'Data.Cities' => \Cake\ORM\Association\HasMany::class,
			'Data.Continents' => \Cake\ORM\Association\HasMany::class,
			'Data.Counties' => \Cake\ORM\Association\HasMany::class,
			'Data.Countries' => \Cake\ORM\Association\HasMany::class,
			'Data.Currencies' => \Cake\ORM\Association\HasMany::class,
			'Data.Districts' => \Cake\ORM\Association\HasMany::class,
			'Data.Languages' => \Cake\ORM\Association\HasMany::class,
			'Data.Locations' => \Cake\ORM\Association\HasMany::class,
			'Data.MimeTypeImages' => \Cake\ORM\Association\HasMany::class,
			'Data.MimeTypes' => \Cake\ORM\Association\HasMany::class,
			'Data.PostalCodes' => \Cake\ORM\Association\HasMany::class,
			'Data.States' => \Cake\ORM\Association\HasMany::class,
			'DatabaseLog.DatabaseLogApp' => \Cake\ORM\Association\HasMany::class,
			'DatabaseLog.DatabaseLogs' => \Cake\ORM\Association\HasMany::class,
			'DebugKit.Panels' => \Cake\ORM\Association\HasMany::class,
			'DebugKit.Requests' => \Cake\ORM\Association\HasMany::class,
			'Feedback.Feedbackstore' => \Cake\ORM\Association\HasMany::class,
			'Geo.GeocodedAddresses' => \Cake\ORM\Association\HasMany::class,
			'Queue.QueueProcesses' => \Cake\ORM\Association\HasMany::class,
			'Queue.QueuedJobs' => \Cake\ORM\Association\HasMany::class,
			'Ratings.Ratings' => \Cake\ORM\Association\HasMany::class,
			'Roles' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.Animals' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.BitmaskRecords' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.CountryRecords' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.Events' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.ExampleRecords' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.ExposedUsers' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.SandboxCategories' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.SandboxPosts' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.SandboxRatings' => \Cake\ORM\Association\HasMany::class,
			'Sandbox.SandboxUsers' => \Cake\ORM\Association\HasMany::class,
			'Tags.Tagged' => \Cake\ORM\Association\HasMany::class,
			'Tags.Tags' => \Cake\ORM\Association\HasMany::class,
			'Tools.Tokens' => \Cake\ORM\Association\HasMany::class,
			'Users' => \Cake\ORM\Association\HasMany::class,
		])
	);

	override(
		\Cake\ORM\Table::hasOne(0),
		map([
			'Captcha.Captchas' => \Cake\ORM\Association\HasOne::class,
			'Data.Addresses' => \Cake\ORM\Association\HasOne::class,
			'Data.Cities' => \Cake\ORM\Association\HasOne::class,
			'Data.Continents' => \Cake\ORM\Association\HasOne::class,
			'Data.Counties' => \Cake\ORM\Association\HasOne::class,
			'Data.Countries' => \Cake\ORM\Association\HasOne::class,
			'Data.Currencies' => \Cake\ORM\Association\HasOne::class,
			'Data.Districts' => \Cake\ORM\Association\HasOne::class,
			'Data.Languages' => \Cake\ORM\Association\HasOne::class,
			'Data.Locations' => \Cake\ORM\Association\HasOne::class,
			'Data.MimeTypeImages' => \Cake\ORM\Association\HasOne::class,
			'Data.MimeTypes' => \Cake\ORM\Association\HasOne::class,
			'Data.PostalCodes' => \Cake\ORM\Association\HasOne::class,
			'Data.States' => \Cake\ORM\Association\HasOne::class,
			'DatabaseLog.DatabaseLogApp' => \Cake\ORM\Association\HasOne::class,
			'DatabaseLog.DatabaseLogs' => \Cake\ORM\Association\HasOne::class,
			'DebugKit.Panels' => \Cake\ORM\Association\HasOne::class,
			'DebugKit.Requests' => \Cake\ORM\Association\HasOne::class,
			'Feedback.Feedbackstore' => \Cake\ORM\Association\HasOne::class,
			'Geo.GeocodedAddresses' => \Cake\ORM\Association\HasOne::class,
			'Queue.QueueProcesses' => \Cake\ORM\Association\HasOne::class,
			'Queue.QueuedJobs' => \Cake\ORM\Association\HasOne::class,
			'Ratings.Ratings' => \Cake\ORM\Association\HasOne::class,
			'Roles' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.Animals' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.BitmaskRecords' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.CountryRecords' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.Events' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.ExampleRecords' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.ExposedUsers' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.SandboxCategories' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.SandboxPosts' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.SandboxRatings' => \Cake\ORM\Association\HasOne::class,
			'Sandbox.SandboxUsers' => \Cake\ORM\Association\HasOne::class,
			'Tags.Tagged' => \Cake\ORM\Association\HasOne::class,
			'Tags.Tags' => \Cake\ORM\Association\HasOne::class,
			'Tools.Tokens' => \Cake\ORM\Association\HasOne::class,
			'Users' => \Cake\ORM\Association\HasOne::class,
		])
	);

	override(
		\Cake\ORM\TableRegistry::get(0),
		map([
			'Captcha.Captchas' => \Captcha\Model\Table\CaptchasTable::class,
			'Data.Addresses' => \Data\Model\Table\AddressesTable::class,
			'Data.Cities' => \Data\Model\Table\CitiesTable::class,
			'Data.Continents' => \Data\Model\Table\ContinentsTable::class,
			'Data.Counties' => \Data\Model\Table\CountiesTable::class,
			'Data.Countries' => \Data\Model\Table\CountriesTable::class,
			'Data.Currencies' => \Data\Model\Table\CurrenciesTable::class,
			'Data.Districts' => \Data\Model\Table\DistrictsTable::class,
			'Data.Languages' => \Data\Model\Table\LanguagesTable::class,
			'Data.Locations' => \Data\Model\Table\LocationsTable::class,
			'Data.MimeTypeImages' => \Data\Model\Table\MimeTypeImagesTable::class,
			'Data.MimeTypes' => \Data\Model\Table\MimeTypesTable::class,
			'Data.PostalCodes' => \Data\Model\Table\PostalCodesTable::class,
			'Data.States' => \Data\Model\Table\StatesTable::class,
			'DatabaseLog.DatabaseLogApp' => \DatabaseLog\Model\Table\DatabaseLogAppTable::class,
			'DatabaseLog.DatabaseLogs' => \DatabaseLog\Model\Table\DatabaseLogsTable::class,
			'DebugKit.Panels' => \DebugKit\Model\Table\PanelsTable::class,
			'DebugKit.Requests' => \DebugKit\Model\Table\RequestsTable::class,
			'Feedback.Feedbackstore' => \Feedback\Model\Table\FeedbackstoreTable::class,
			'Geo.GeocodedAddresses' => \Geo\Model\Table\GeocodedAddressesTable::class,
			'Queue.QueueProcesses' => \Queue\Model\Table\QueueProcessesTable::class,
			'Queue.QueuedJobs' => \Queue\Model\Table\QueuedJobsTable::class,
			'Ratings.Ratings' => \Ratings\Model\Table\RatingsTable::class,
			'Roles' => \App\Model\Table\RolesTable::class,
			'Sandbox.Animals' => \Sandbox\Model\Table\AnimalsTable::class,
			'Sandbox.BitmaskRecords' => \Sandbox\Model\Table\BitmaskRecordsTable::class,
			'Sandbox.CountryRecords' => \Sandbox\Model\Table\CountryRecordsTable::class,
			'Sandbox.Events' => \Sandbox\Model\Table\EventsTable::class,
			'Sandbox.ExampleRecords' => \Sandbox\Model\Table\ExampleRecordsTable::class,
			'Sandbox.ExposedUsers' => \Sandbox\Model\Table\ExposedUsersTable::class,
			'Sandbox.SandboxCategories' => \Sandbox\Model\Table\SandboxCategoriesTable::class,
			'Sandbox.SandboxPosts' => \Sandbox\Model\Table\SandboxPostsTable::class,
			'Sandbox.SandboxRatings' => \Sandbox\Model\Table\SandboxRatingsTable::class,
			'Sandbox.SandboxUsers' => \Sandbox\Model\Table\SandboxUsersTable::class,
			'Tags.Tagged' => \Tags\Model\Table\TaggedTable::class,
			'Tags.Tags' => \Tags\Model\Table\TagsTable::class,
			'Tools.Tokens' => \Tools\Model\Table\TokensTable::class,
			'Users' => \App\Model\Table\UsersTable::class,
		])
	);

	expectedArguments(
		\Cake\Routing\Router::pathUrl(),
		0,
		'Account::action',
		'AuthSandbox.AuthSandbox::action',
		'Captcha.Captcha::action',
		'Contact::action',
		'Data.Addresses::action',
		'Data.Cities::action',
		'Data.Continents::action',
		'Data.Countries::action',
		'Data.Currencies::action',
		'Data.DataApp::action',
		'Data.Languages::action',
		'Data.MimeTypeImages::action',
		'Data.MimeTypes::action',
		'Data.PostalCodes::action',
		'Data.States::action',
		'DatabaseLog.DatabaseLog::action',
		'DatabaseLog.Logs::action',
		'DebugKit.Composer::action',
		'DebugKit.Dashboard::action',
		'DebugKit.DebugKit::action',
		'DebugKit.MailPreview::action',
		'DebugKit.Panels::action',
		'DebugKit.Requests::action',
		'DebugKit.Toolbar::action',
		'Export::action',
		'Expose.Expose::action',
		'Feedback.Feedback::action',
		'Geo.Geo::action',
		'Geo.GeocodedAddresses::action',
		'Misc::action',
		'Overview::action',
		'Pages::action',
		'Queue.Queue::action',
		'Queue.QueueProcesses::action',
		'Queue.QueuedJobs::action',
		'Sandbox.AjaxExamples::action',
		'Sandbox.AssetCompressExamples::action',
		'Sandbox.Bootstrap::action',
		'Sandbox.CacheExamples::action',
		'Sandbox.CakeExamples::action',
		'Sandbox.Calendar::action',
		'Sandbox.Captchas::action',
		'Sandbox.ChronosExamples::action',
		'Sandbox.Conventions::action',
		'Sandbox.Csv::action',
		'Sandbox.DtoExamples::action',
		'Sandbox.Examples::action',
		'Sandbox.ExposeExamples::action',
		'Sandbox.FeedExamples::action',
		'Sandbox.FeedbackExamples::action',
		'Sandbox.FlashExamples::action',
		'Sandbox.GeoExamples::action',
		'Sandbox.Inflector::action',
		'Sandbox.JqueryExamples::action',
		'Sandbox.JsExamples::action',
		'Sandbox.MarkupExamples::action',
		'Sandbox.MediaEmbed::action',
		'Sandbox.Menu::action',
		'Sandbox.PluginExamples::action',
		'Sandbox.Plugins::action',
		'Sandbox.QueueExamples::action',
		'Sandbox.Ratings::action',
		'Sandbox.Sandbox::action',
		'Sandbox.SandboxApp::action',
		'Sandbox.SearchExamples::action',
		'Sandbox.ServiceExamples::action',
		'Sandbox.SocialShare::action',
		'Sandbox.Tags::action',
		'Sandbox.ToolsExamples::action',
		'Sandbox.Tryouts::action',
		'Sandbox.TwigExamples::action',
		'Setup.Backend::action',
		'Setup.Database::action',
		'Setup.Setup::action',
		'TestHelper.Plugins::action',
		'TestHelper.TestCases::action',
		'TestHelper.TestFixtures::action',
		'TestHelper.TestHelper::action',
		'Tools.ShuntRequest::action',
		'Users::action'
	);

	expectedArguments(
		\Cake\Validation\Validator::requirePresence(),
		1,
		'create',
		'update'
	);

	expectedArguments(
		\Cake\View\View::element(),
		0,
		'BootstrapUI.flash/default',
		'Cake/TwigView.twig_panel',
		'Data.States/search',
		'DatabaseLog.paging',
		'DatabaseLog.search',
		'DebugKit.cache_panel',
		'DebugKit.deprecations_panel',
		'DebugKit.environment_panel',
		'DebugKit.history_panel',
		'DebugKit.include_panel',
		'DebugKit.log_panel',
		'DebugKit.mail_panel',
		'DebugKit.packages_panel',
		'DebugKit.preview_header',
		'DebugKit.request_panel',
		'DebugKit.routes_panel',
		'DebugKit.session_panel',
		'DebugKit.sql_log_panel',
		'DebugKit.timer_panel',
		'DebugKit.variables_panel',
		'Feedback.sidebar',
		'Geo.pagination',
		'Queue.search',
		'Sandbox.actions',
		'Sandbox.feed/element',
		'Sandbox.inflector/result-row',
		'Sandbox.inflector/results',
		'Sandbox.navigation/ajax',
		'Sandbox.navigation/dto',
		'Sandbox.navigation/media_embed',
		'Sandbox.navigation/queue',
		'Sandbox.navigation/search',
		'Sandbox.navigation/service',
		'Sandbox.navigation/tags',
		'Sandbox.navigation/tools',
		'TestHelper.test_cases',
		'TestHelper.url',
		'TinyAuth.auth_panel',
		'Tools.pagination',
		'flash/default',
		'flash/error',
		'flash/info',
		'flash/success',
		'flash/warning',
		'navigation',
		'stats'
	);

	override(
		\Cake\View\View::loadHelper(0),
		map([
			'App' => \App\View\Helper\AppHelper::class,
			'AssetCompress.AssetCompress' => \AssetCompress\View\Helper\AssetCompressHelper::class,
			'Bake.Bake' => \Bake\View\Helper\BakeHelper::class,
			'Bake.DocBlock' => \Bake\View\Helper\DocBlockHelper::class,
			'BootstrapUI.Breadcrumbs' => \BootstrapUI\View\Helper\BreadcrumbsHelper::class,
			'BootstrapUI.Flash' => \BootstrapUI\View\Helper\FlashHelper::class,
			'BootstrapUI.Form' => \BootstrapUI\View\Helper\FormHelper::class,
			'BootstrapUI.Html' => \BootstrapUI\View\Helper\HtmlHelper::class,
			'BootstrapUI.Paginator' => \BootstrapUI\View\Helper\PaginatorHelper::class,
			'Breadcrumbs' => \Cake\View\Helper\BreadcrumbsHelper::class,
			'CakeDto.Template' => \CakeDto\View\Helper\TemplateHelper::class,
			'Calendar.Calendar' => \Calendar\View\Helper\CalendarHelper::class,
			'Captcha.Captcha' => \Captcha\View\Helper\CaptchaHelper::class,
			'Data.Data' => \Data\View\Helper\DataHelper::class,
			'Data.MimeType' => \Data\View\Helper\MimeTypeHelper::class,
			'DatabaseLog.Log' => \DatabaseLog\View\Helper\LogHelper::class,
			'DebugKit.Credentials' => \DebugKit\View\Helper\CredentialsHelper::class,
			'DebugKit.SimpleGraph' => \DebugKit\View\Helper\SimpleGraphHelper::class,
			'DebugKit.Toolbar' => \DebugKit\View\Helper\ToolbarHelper::class,
			'Flash' => \Cake\View\Helper\FlashHelper::class,
			'Form' => \App\View\Helper\FormHelper::class,
			'Geo.GoogleMap' => \Geo\View\Helper\GoogleMapHelper::class,
			'Html' => \Cake\View\Helper\HtmlHelper::class,
			'Icings/Menu.Menu' => \Icings\Menu\View\Helper\MenuHelper::class,
			'IdeHelper.DocBlock' => \IdeHelper\View\Helper\DocBlockHelper::class,
			'Markup.Highlighter' => \Markup\View\Helper\HighlighterHelper::class,
			'Meta.Meta' => \Meta\View\Helper\MetaHelper::class,
			'Migrations.Migration' => \Migrations\View\Helper\MigrationHelper::class,
			'Navigation' => \App\View\Helper\NavigationHelper::class,
			'Number' => \Cake\View\Helper\NumberHelper::class,
			'Paginator' => \Cake\View\Helper\PaginatorHelper::class,
			'Queue.Queue' => \Queue\View\Helper\QueueHelper::class,
			'Queue.QueueProgress' => \Queue\View\Helper\QueueProgressHelper::class,
			'Ratings.Rating' => \Ratings\View\Helper\RatingHelper::class,
			'Sandbox' => \App\View\Helper\SandboxHelper::class,
			'Sandbox.MediaEmbedBbcode' => \Sandbox\View\Helper\MediaEmbedBbcodeHelper::class,
			'Search.Search' => \Search\View\Helper\SearchHelper::class,
			'Tags.Tag' => \Tags\View\Helper\TagHelper::class,
			'Tags.TagCloud' => \Tags\View\Helper\TagCloudHelper::class,
			'TestHelper.TestHelper' => \TestHelper\View\Helper\TestHelperHelper::class,
			'Text' => \Cake\View\Helper\TextHelper::class,
			'Time' => \Cake\View\Helper\TimeHelper::class,
			'TinyAuth.AuthUser' => \TinyAuth\View\Helper\AuthUserHelper::class,
			'TinyAuth.Authentication' => \TinyAuth\View\Helper\AuthenticationHelper::class,
			'Tools.Common' => \Tools\View\Helper\CommonHelper::class,
			'Tools.Form' => \Tools\View\Helper\FormHelper::class,
			'Tools.Format' => \Tools\View\Helper\FormatHelper::class,
			'Tools.Gravatar' => \Tools\View\Helper\GravatarHelper::class,
			'Tools.Html' => \Tools\View\Helper\HtmlHelper::class,
			'Tools.Meter' => \Tools\View\Helper\MeterHelper::class,
			'Tools.Number' => \Tools\View\Helper\NumberHelper::class,
			'Tools.Obfuscate' => \Tools\View\Helper\ObfuscateHelper::class,
			'Tools.Progress' => \Tools\View\Helper\ProgressHelper::class,
			'Tools.QrCode' => \Tools\View\Helper\QrCodeHelper::class,
			'Tools.Text' => \Tools\View\Helper\TextHelper::class,
			'Tools.Time' => \Tools\View\Helper\TimeHelper::class,
			'Tools.Timeline' => \Tools\View\Helper\TimelineHelper::class,
			'Tools.Tree' => \Tools\View\Helper\TreeHelper::class,
			'Tools.Typography' => \Tools\View\Helper\TypographyHelper::class,
			'Tools.Url' => \Tools\View\Helper\UrlHelper::class,
			'Url' => \Cake\View\Helper\UrlHelper::class,
		])
	);

	expectedArguments(
		\Cake\View\ViewBuilder::addHelper(),
		0,
		'App',
		'AssetCompress.AssetCompress',
		'Bake.Bake',
		'Bake.DocBlock',
		'BootstrapUI.Breadcrumbs',
		'BootstrapUI.Flash',
		'BootstrapUI.Form',
		'BootstrapUI.Html',
		'BootstrapUI.Paginator',
		'Breadcrumbs',
		'CakeDto.Template',
		'Calendar.Calendar',
		'Captcha.Captcha',
		'Data.Data',
		'Data.MimeType',
		'DatabaseLog.Log',
		'DebugKit.Credentials',
		'DebugKit.SimpleGraph',
		'DebugKit.Toolbar',
		'Flash',
		'Form',
		'Geo.GoogleMap',
		'Html',
		'Icings/Menu.Menu',
		'IdeHelper.DocBlock',
		'Markup.Highlighter',
		'Meta.Meta',
		'Migrations.Migration',
		'Navigation',
		'Number',
		'Paginator',
		'Queue.Queue',
		'Queue.QueueProgress',
		'Ratings.Rating',
		'Sandbox',
		'Sandbox.MediaEmbedBbcode',
		'Search.Search',
		'Tags.Tag',
		'Tags.TagCloud',
		'TestHelper.TestHelper',
		'Text',
		'Time',
		'TinyAuth.AuthUser',
		'TinyAuth.Authentication',
		'Tools.Common',
		'Tools.Form',
		'Tools.Format',
		'Tools.Gravatar',
		'Tools.Html',
		'Tools.Meter',
		'Tools.Number',
		'Tools.Obfuscate',
		'Tools.Progress',
		'Tools.QrCode',
		'Tools.Text',
		'Tools.Time',
		'Tools.Timeline',
		'Tools.Tree',
		'Tools.Typography',
		'Tools.Url',
		'Url'
	);

	expectedArguments(
		\Cake\View\ViewBuilder::setLayout(),
		0,
		'BootstrapUI.default',
		'DebugKit.dashboard',
		'DebugKit.mailer',
		'DebugKit.panel',
		'DebugKit.toolbar',
		'ajax',
		'default',
		'error'
	);

	expectedArguments(
		\Migrations\AbstractMigration::table(),
		0,
		argumentsSet('tableNames')
	);

	expectedArguments(
		\Migrations\AbstractSeed::table(),
		0,
		argumentsSet('tableNames')
	);

	expectedArguments(
		\Migrations\Table::addColumn(),
		0,
		argumentsSet('tableNames')
	);

	expectedArguments(
		\Migrations\Table::addColumn(),
		1,
		argumentsSet('tableTypes')
	);

	expectedArguments(
		\Migrations\Table::changeColumn(),
		0,
		argumentsSet('tableNames')
	);

	expectedArguments(
		\Migrations\Table::changeColumn(),
		1,
		argumentsSet('tableTypes')
	);

	expectedArguments(
		\Migrations\Table::hasColumn(),
		0,
		argumentsSet('tableNames')
	);

	expectedArguments(
		\Migrations\Table::removeColumn(),
		0,
		argumentsSet('tableNames')
	);

	expectedArguments(
		\Migrations\Table::renameColumn(),
		0,
		argumentsSet('tableNames')
	);

	expectedArguments(
		\Phinx\Seed\AbstractSeed::table(),
		0,
		argumentsSet('tableNames')
	);

	expectedArguments(
		\Queue\Model\Table\QueuedJobsTable::createJob(),
		0,
		'CostsExample',
		'Email',
		'Example',
		'ExceptionExample',
		'Execute',
		'MonitorExample',
		'MyTaskName',
		'ProgressExample',
		'RetryExample',
		'SuperExample',
		'UniqueExample'
	);

	expectedArguments(
		\Queue\Model\Table\QueuedJobsTable::isQueued(),
		1,
		'CostsExample',
		'Email',
		'Example',
		'ExceptionExample',
		'Execute',
		'MonitorExample',
		'MyTaskName',
		'ProgressExample',
		'RetryExample',
		'SuperExample',
		'UniqueExample'
	);

	expectedArguments(
		\__(),
		0,
		'%s could not be found.',
		'(HtmlHelper::formTag) Deprecated: Use FormHelper::create instead',
		'(HtmlHelper::linkEmail) Deprecated: Use HtmlHelper::link instead',
		'(JavascriptHelper::linkOut) Deprecated: Use JavascriptHelper::link instead',
		'(View::setLayout) Deprecated: Use $this->layout = "..." instead',
		': Confirm you have created the %1$s::%2$s in file : %3$s.',
		'A simple string.',
		'ACO permissions key %s does not exist in DB_ACL::check()',
		'Actions',
		'Add',
		'Add ',
		'Add %s',
		'Are you sure you want to delete id %s?',
		'Blogä@$€ posts',
		'Book Store',
		'Cake %s connect to the database.',
		'Cake Software Foundation',
		'CakeForge',
		'CakePHP',
		'CakePHP API',
		'CakePHP Google Group',
		'CakePHP Manual',
		'CakePHP Rapid Development',
		'CakePHP Trac',
		'CakePHP Wiki',
		'CakePHP is a rapid development framework for PHP which uses commonly known design patterns like Active Record, Association Data Mapping, Front Controller and MVC.',
		'CakePHP release information is on CakeForge',
		'CakeSchwag',
		'Change Language',
		'Comment',
		'Community mailing list',
		'Configure::load() - %s.php not found',
		'Configure::load() - no variable $config found in %s.php',
		'Confirm you have created the file : %s.',
		'Confirm you have created the file: %s',
		'ConnectionManager::getDataSource - Non-existent data source %s',
		'Contact Owner',
		'Contact Us',
		'Controller dump:',
		'Controller::__construct() : Can not get or parse my own class name, exiting.',
		'Create the class below in file: %s',
		'DB_ACL::allow() - Invalid ACO action',
		'DB_ACL::allow() - Invalid node',
		'Delete',
		'Delete  ',
		'Delete %s',
		'Deprecated: Use Controller::set("title", "...") instead',
		'Deprecated: Use DboSource::fetchRow($sql) instead',
		'Deprecated: Use DboSource::fetchRow() instead',
		'Deprecated: Use FormHelper::input() instead',
		'Deprecated: Use FormHelper::input() or FormHelper::checkbox() instead',
		'Deprecated: Use FormHelper::input() or FormHelper::select() instead',
		'Deprecated: Use FormHelper::input() or FormHelper::text() instead',
		'Deprecated: Use FormHelper::label() instead',
		'Deprecated: Use FormHelper::submit() instead',
		'Deprecated: Use Set::countDim instead',
		'Docblock Your Best Friend',
		'Don\'t use me yet',
		'Driven km',
		'Edit',
		'Edit %s',
		'Editing this Page',
		'Email',
		'Error in layout %s, got: <blockquote>%s</blockquote>',
		'Error in view %s, got: <blockquote>%s</blockquote>',
		'Error! Could not write to',
		'Everything CakePHP',
		'Fatal',
		'File exists, overwrite?',
		'For the Development of CakePHP (Tickets, SVN browser, Roadmap, Changelogs)',
		'Get your own CakePHP gear - Doughnate to Cake',
		'Hello, my name is {0}, I\'m {1} years old.',
		'If you want to customize this error message, create %s',
		'If you want to customize this error message, create %s.',
		'Implement in DBO',
		'Language',
		'Language switched to {0}.',
		'List  ',
		'List %s',
		'Live chat about CakePHP',
		'Magic method handler __call__ not defined in %s',
		'Message',
		'Method %1$s::%2$s does not exist',
		'Milage',
		'Missing Component Class',
		'Missing Component File',
		'Missing Database Connection: %s requires a database connection',
		'Missing Database Connection: Scaffold Does not work without a database connection',
		'Missing Database Table',
		'Missing Helper Class',
		'Missing Helper File',
		'Missing Layout',
		'Missing Method in %s',
		'Missing Model',
		'Missing controller',
		'Missing view',
		'Model %s does not exist',
		'More about Cake',
		'New ',
		'New %s',
		'No Database table for model %1$s (expected %2$s), create it first.',
		'No class found for the <em>%s</em> model.',
		'No id set for %s::delete()',
		'No id set for %s::edit()',
		'No id set for %s::view()',
		'Notice',
		'Null id provided in DB_ACL::get',
		'Null parent in %s::create()',
		'Open Development for CakePHP',
		'Our primary goal is to provide a structured framework that enables PHP users at all levels to rapidly develop robust web applications, without any loss to flexibility.',
		'Own Subject',
		'Please correct errors below.',
		'Please implement DBO::disconnect() first.',
		'Please implement DBO_Pear::tablesList() for your database driver.',
		'Plugins must have a class named %s',
		'Private Method in %s',
		'Promoting development related to CakePHP',
		'Quitting.',
		'Read the release notes and get the latest version',
		'Receipt Date',
		'Recommended Software Books',
		'Related %s',
		'Requires a Database Connection',
		'Save',
		'Scaffold :: ',
		'Scaffold Error',
		'Scaffold Requires a Database Connection',
		'SecurityComponent::loginCredentials() - Server does not support digest authentication',
		'See the views section of the manual for more info.',
		'Skip',
		'Subject',
		'The %1$s has been %2$s',
		'The %1$s with id: %2$d has been deleted.',
		'The Bakery',
		'The Community for CakePHP',
		'The Rapid Development Framework',
		'The requested address %s was not found on this server.',
		'There was an error deleting the %1$s with id: %2$d',
		'To change its layout, create: /app/views/layouts/default.thtml.',
		'To change the content of this page, create: /app/views/pages/home.thtml.',
		'Total Cost',
		'Total Fuel',
		'Unable to find /app/config/database.php.  Please create it before continuing.

',
		'Unable to load DataSource file %s.php',
		'Vielen Dank',
		'View',
		'View ',
		'View %s',
		'Wrong file name.',
		'Wrote',
		'You are seeing this error because controller <em>%s</em> could not be found.',
		'You are seeing this error because the action <em>%1$s</em> is not defined in controller <em>%2$s</em>',
		'You are seeing this error because the component class <em>%1$s</em> you have set in <em>%2$s</em> can\'t be found or doesn\'t exist.',
		'You are seeing this error because the component file can not be found or does not exist.',
		'You are seeing this error because the layout file %s can not be found or does not exist.',
		'You are seeing this error because the private class method <em>%s</em> should not be accessed directly.',
		'You are seeing this error because the view for <em>%1$s::%2$s()</em>, could not be found.',
		'You are seeing this error because the view helper class <em>%s</em> can not be found or does not exist.',
		'You are seeing this error because the view helper file %s can not be found or does not exist.',
		'You can also add some CSS styles for your pages at: app/webroot/css/.',
		'You have traveled {0,number} kilometers in {1,number,integer} weeks.',
		'You must define a regular expression for Validation::custom()',
		'You must define the $operator parameter for Validation::comparison()',
		'Your Rapid Development Cookbook',
		'Your balance on the {0,date} is {1,number,currency}.',
		'Your database configuration file is %s.',
		'Your must implement the following method in your controller',
		'[acl_base] The AclBase class constructor has been called, or the class was instantiated. This class must remain abstract. Please refer to the Cake docs for ACL configuration.',
		'active',
		'chmodr() File exists',
		'contactChoseSubject',
		'contactHeader',
		'contactLegend',
		'contactMessage',
		'contactOwnSubject',
		'contactSubject',
		'contactSuccessfullySent',
		'contactSuccessfullySent {0}',
		'formContainsErrors',
		'is able to',
		'is not able to',
		'lipsum',
		'messageAnswered',
		'messageNew',
		'messageRead',
		'mkdirr() File exists',
		'noOptionAvailable',
		'not present',
		'pleaseSelect',
		'present',
		'saved',
		'updated',
		'valErrInvalidEmail',
		'valErrMandatoryField'
	);

	expectedArguments(
		\__d(),
		0,
		'ajax',
		'asset_compress',
		'auth_sandbox',
		'bake',
		'bootstrap_u_i',
		'cache',
		'cake',
		'cake/twig_view',
		'cake_dto',
		'calendar',
		'captcha',
		'data',
		'database_log',
		'debug_kit',
		'expose',
		'feedback',
		'geo',
		'icings/menu',
		'ide_helper',
		'markup',
		'meta',
		'migrations',
		'model_graph',
		'queue',
		'ratings',
		'ratings_sie',
		'sandbox',
		'search',
		'setup',
		'tags',
		'test_helper',
		'tiny_auth',
		'tools'
	);

	expectedArguments(
		\__d(),
		1,
		'A copy of your submitted feedback:',
		'Aborted after too many trials with \'{0}\'',
		'Account deleted',
		'Account not active yet',
		'Account temporarily locked',
		'Accuracy not good enough ({0} instead of at least {1})',
		'Active',
		'Add {0}',
		'Address \'{0}\' has been geocoded',
		'All',
		'Anonymous',
		'Approved',
		'Cancel',
		'Captcha',
		'Captcha incorrect',
		'Click anywhere on website',
		'Close',
		'Comma',
		'Could not create directory to save feedbacks in. Please provide write rights to webserver user on directory: ',
		'Could not create directory to save screenshots in. Please provide write rights to webserver user on directory: ',
		'Could not find that file',
		'Could not geocode \'{0}\'',
		'Could not retrieve url with \'{0}\'',
		'Could not save tmp file for attachment in mail',
		'Custom action',
		'Day',
		'Days',
		'Delay necessary for \'{0}\'',
		'Delay necessary for address \'{0}\'',
		'Dictionary {0} not found',
		'Donate',
		'Done',
		'E-mail me a copy',
		'Edit',
		'Email not active yet',
		'Engine {0} not available',
		'Engine {0} not found',
		'Enter your address',
		'Error saving feedback.',
		'Expectation not reached (we have {0} instead of at least one of {1})',
		'Failed geocode parsing of \'{0}\'',
		'Failed reverseGeocode parsing of \'{0}\'',
		'Feb',
		'Feedback location not found: ',
		'Feedback or suggestion',
		'Feedback submitted',
		'Flagged',
		'Generated Link',
		'Get directions',
		'Hide this tab completely.',
		'Highlight something',
		'Hour',
		'Hours',
		'House',
		'Houses',
		'I am okay with',
		'I am okay with {0}.',
		'Illegal call',
		'Illegal content',
		'In {0}',
		'Inconclusive result (total of {0})',
		'Invalid Key',
		'Invalid Rating',
		'Invalid Record',
		'Invalid Unit',
		'Invalid Unit: {0}',
		'Invalid level \'{0}\'',
		'Invalid rate.',
		'Invalid rating mode %s.',
		'January',
		'Language',
		'List {0}',
		'Map',
		'Map cannot be displayed!',
		'Master Password',
		'May',
		'Meta Type invalid',
		'Method not found in Feedbackstore model:',
		'Minute',
		'Minutes',
		'Module {0} not installed',
		'Month',
		'Months',
		'New Line',
		'No',
		'No config file found. Please create one: ',
		'No save method found in config file',
		'No screenshot found',
		'No way',
		'None',
		'November',
		'Page %page% of %pages%, showing {0}urrent% records out of {1}ount% total',
		'Password',
		'Percent',
		'Please enable cookies',
		'Published',
		'Qlogin',
		'Qlogins',
		'Rate!',
		'Reason',
		'Reset {0}',
		'Revert',
		'Saturday',
		'Second',
		'Seconds',
		'Selection',
		'Semicolon',
		'Send your feedback or bugreport!',
		'Space',
		'Subject',
		'Submit',
		'Subscribe to this feed',
		'Success',
		'Sunday',
		'Sure?',
		'Tabulator',
		'Thank you. Your feedback was saved.',
		'The behavior "Containable", if used together with "CustomFinds" needs to be loaded before.',
		'The day after tomorrow',
		'The day before yesterday',
		'The prefix {0} is not specified.',
		'This function is only available with filesystem save method',
		'Today',
		'Tomorrow',
		'Too many trials - abort',
		'Tue',
		'Tuesday',
		'Unknown Error',
		'View your feedback on: ',
		'When you submit, a screenshot (of only this website) will be taken to aid us in processing your feedback or bugreport.',
		'Yes',
		'Yesterday',
		'You can not vote on your own records',
		'You have already rated this record',
		'You have already rated.',
		'You must set the id of the item you want to rate.',
		'You successfully logged in via qlogin',
		'Your e-mail ',
		'Your feedback was saved successfully.',
		'Your name ',
		'Your rate was successful.',
		'a {0} b {1} c {0} {1} {0} {1} {2} h {3}',
		'a {0} b {1} c {2} {3} {4} {5} {6} h {7}',
		'active',
		'added',
		'alreadyVoted',
		'and',
		'by',
		'by System',
		'calcMinus',
		'calcPlus',
		'calcTimes',
		'captchaContentMissing',
		'captchaExplained',
		'captchaIllegalContent',
		'captchaResultIncorrect',
		'captchaResultTooFast',
		'captchaResultTooLate',
		'captchaTip',
		'color',
		'consentThis',
		'deleted',
		'dissentThis',
		'e {0} f',
		'e {0} f {1} g',
		'e {0} f {1} g {2}',
		'eight',
		'first',
		'five',
		'for use in an external mail client',
		'four',
		'in {0}',
		'invalid date',
		'invalidLoginCredentials',
		'justNow',
		'last',
		'next',
		'nine',
		'noNext',
		'noPrev',
		'notAvailable',
		'o\'clock',
		'of',
		'one',
		'prev',
		'previous',
		'prio',
		'publishedAlready',
		'publishedNotYet',
		'publishedToday',
		'seven',
		'six',
		'ten',
		'this',
		'three',
		'two',
		'until',
		'updated',
		'valErrBetweenCharacters {0} {1}',
		'valErrCurrentPwdIncorrect',
		'valErrProvideCurrentPwd',
		'valErrPwdNotMatch',
		'valid ones',
		'validateLongitudeError',
		'zero',
		'zodiacAquarius',
		'zodiacAries',
		'zodiacCancer',
		'zodiacCapricorn',
		'zodiacGemini',
		'zodiacLeo',
		'zodiacLibra',
		'zodiacPisces',
		'zodiacSagittarius',
		'zodiacScorpio',
		'zodiacTaurus',
		'zodiacVirgo',
		'{0} NOT removed',
		'{0} ago',
		'{0} removed'
	);

	expectedArguments(
		\env(),
		0,
		'CGI_MODE',
		'COMPOSER_BINARY',
		'COMPOSER_ORIGINAL_INIS',
		'CONTENT_LENGTH',
		'CONTENT_TYPE',
		'DOCUMENT_ROOT',
		'DOCUMENT_URI',
		'GATEWAY_INTERFACE',
		'GIT_ASKPASS',
		'HOME',
		'HTTPS',
		'HTTP_ACCEPT',
		'HTTP_ACCEPT_ENCODING',
		'HTTP_ACCEPT_LANGUAGE',
		'HTTP_CONNECTION',
		'HTTP_COOKIE',
		'HTTP_HOST',
		'HTTP_USER_AGENT',
		'JAVA_HOME',
		'LANG',
		'LANGUAGE',
		'LC_ADDRESS',
		'LC_IDENTIFICATION',
		'LC_MEASUREMENT',
		'LC_MONETARY',
		'LC_NAME',
		'LC_NUMERIC',
		'LC_PAPER',
		'LC_TELEPHONE',
		'LESSCLOSE',
		'LESSOPEN',
		'LOGNAME',
		'LS_COLORS',
		'MAIL',
		'OLDPWD',
		'PATH',
		'PATH_TRANSLATED',
		'PHP_BINARY',
		'PHP_SELF',
		'PWD',
		'QUERY_STRING',
		'REDIRECT_STATUS',
		'REMOTE_ADDR',
		'REMOTE_PORT',
		'REQUEST_METHOD',
		'REQUEST_SCHEME',
		'REQUEST_TIME',
		'REQUEST_TIME_FLOAT',
		'REQUEST_URI',
		'SCRIPT_FILENAME',
		'SCRIPT_NAME',
		'SERVER_NAME',
		'SERVER_PORT',
		'SERVER_PROTOCOL',
		'SHELL',
		'SHLVL',
		'SSH_AUTH_SOCK',
		'SSH_CLIENT',
		'SSH_CONNECTION',
		'SSH_TTY',
		'TERM',
		'USER',
		'XDEBUG_HANDLER_SETTINGS',
		'XDG_RUNTIME_DIR',
		'XDG_SESSION_ID',
		'argc',
		'argv'
	);

	registerArgumentsSet(
		'cacheEngines',
		'_cake_core_',
		'_cake_model_',
		'default'
	);

	registerArgumentsSet(
		'tableNames',
		'captchas',
		'continents',
		'countries',
		'currencies',
		'database_logs',
		'events',
		'exposed_users',
		'languages',
		'queue_processes',
		'queued_jobs',
		'roles',
		'sandbox_animals',
		'sandbox_categories',
		'sandbox_posts',
		'sandbox_ratings',
		'sandbox_users',
		'social_profiles',
		'state_machine_item_state_history',
		'state_machine_item_states',
		'state_machine_items',
		'state_machine_locks',
		'state_machine_processes',
		'state_machine_timeouts',
		'state_machine_transition_logs',
		'states',
		'tags_tagged',
		'tags_tags',
		'users',
		'uuid16_test_rows'
	);

	registerArgumentsSet(
		'tableTypes',
		'biginteger',
		'binary',
		'binaryuuid',
		'bit',
		'blob',
		'boolean',
		'char',
		'date',
		'datetime',
		'decimal',
		'double',
		'enum',
		'float',
		'geometry',
		'integer',
		'json',
		'linestring',
		'point',
		'polygon',
		'set',
		'smallinteger',
		'string',
		'text',
		'time',
		'timestamp',
		'uuid',
		'varbinary',
		'year'
	);

}
